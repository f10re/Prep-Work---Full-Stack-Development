package user.domain;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
//import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

import lombok.AccessLevel;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Setter;

@Data
@EqualsAndHashCode(exclude = "id")
@Entity
public class Address {
	
	@Id // @Id indicates that this it a unique primary key
    @GeneratedValue // @GeneratedValue indicates that value is automatically generated by the server
    @Setter(AccessLevel.PRIVATE) // ??
    private Long id;
	
	@Enumerated(EnumType.STRING)
	@Column(nullable = false, length = 10)
	private AddressType type; // home address, business address
	
	@Column(nullable = false, length = 100)
	private String street;
	
	@Column(name = "postal_code", nullable = false, length = 10)
	private String postalCode;
	
	@Column(nullable = false, length = 100)
	private String city;
	
	@Column(nullable = false, length = 100)
	private String country;
	
	@ManyToOne
//    @JoinColumn(name="id")
    private User user;
	
	public Address(){
	}
	
	public Address(AddressType type, String street, String postalCode, String city, String country, User user) {
		this();
		this.type = type;
		this.street = street;
		this.postalCode = postalCode;
		this.city = city;
		this.country = country;
		this.user = user;
	}
	
	public Address(AddressType type, String street, String postalCode, String city, String country) {
		this(type, street, postalCode, city, country, null);
	}

	public Address(Long id, AddressType type, String street, String postalCode, String city, String country,
			User user) {
		this(type, street, city, postalCode, country, user);
		this.id = id;
	}
	
	// por que 3 constructores??
	
	@Override
	public String toString() {
		return "Address [id=" + this.id + ", type=" + this.type + ", street=" + this.street + ", city=" + this.city
				+ ", postalCode=" + this.postalCode + ", country=" + this.country + ", user="
				+ (this.user == null ? null : this.user.getId()) + "]";
	}

}
